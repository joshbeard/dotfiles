# ===================================================================
# Common Environment Configuration
# Sourced by sh, bash and zsh
# ===================================================================

### Path
export PATH=$PATH:~/bin:~/.local/bin

### Environment variables
export HISTFILE=~/.zsh_history
export HISTIGNORE=ls:history
export HISTSIZE=10000
export HISTTIMEFORMAT='%Y-%m-%d %T '
export SAVEHIST=10000
export KEYTIMEOUT=1
export GPG_TTY=$(tty)
export VAGRANT_DEFAULT_PROVIDER=virtualbox

if which less >>/dev/null 2>&1; then
  export MANPAGER="less -X -R"
  export PAGER="less -X -R"
  # make less more friendly for non-text input files, see lesspipe(1)
  [ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"
fi

if [ -f "/etc/ssl/certs/ca-certificates.crt" ]; then
  export SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
  export CURL_CA_BUNDLE="${SSL_CERT_FILE}"
  export GIT_SSL_CAINFO="${SSL_CERT_FILE}"
  export PIP_CERT="${SSL_CERT_FILE}"
  export REQUESTS_CA_BUNDLE="${SSL_CERT_FILE}"
  export NODE_EXTRA_CA_CERTS="${SSL_CERT_FILE}"
  export NPM_CONFIG_CAFILE="${SSL_CERT_FILE}"
fi

# Node/nvm
if [ -d "$HOME/.nvm" ]; then
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
fi

# Go
export GOPATH=${HOME}/go
export GOBIN=${GOPATH}/bin
[ -d $GOBIN ] && PATH=$PATH:$GOBIN

# Ruby
[ -d $HOME/.rbenv/ ] && eval "$(rbenv init - zsh)"
[ -d $HOME/.rvm/bin ] && PATH=$PATH:$HOME/.rvm/bin

### aliases

## Common Aliases
alias less='less -X -R'
alias d='dirs -v; echo -n "select number: "; read newdir; cd -"$newdir"'
alias grep="grep --color=auto"
alias rm="rm -i"
alias mv="mv -i"
alias cp="cp -i"
alias cd..="cd .."
alias mkdir='mkdir -p -v'
alias ll="ls -hl"
alias lsd="ls -hdlf */"
alias df='df -h'
alias du='du -h -c'

alias homeshick="$HOME/.homesick/repos/homeshick/bin/homeshick"

if which tmux >>/dev/null 2>&1; then
  alias tl='tmux ls'
  alias ta='tmux attach -t'
  alias tr='tmux rename-session -t'
fi

if which bundle >>/dev/null 2>&1; then
  alias bi='bundle install'
  alias be='bundle exec'
  alias bl='bundle list'
  # Disable autocorrection for 'bundle'
  alias bundle='nocorrect bundle'
fi

## OS-specific configuration
case $(uname -s) in
  Darwin)
    alias ls="ls -hFG"
    # add datetime
    alias history="history -i"

    # vs code
    if [ -f "/Applications/Visual Studio Code.app/Contents/Resources/app/bin/code" ]; then
      alias code='/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin/code'
    fi

    # marked
    if [ -d "/Applications/Marked 2.app" ]; then
      alias marked='open -a marked\ 2'
    fi

    # docker
    if [ -f "/usr/local/bin/docker" ]; then
      alias ansible-docker='docker run --rm -v ${HOME}/.ssh/id_rsa:/home/ansible/.ssh/id_rsa -v ${PWD}:/work -w /work -it joshbeard/ansible bash'
      alias ansible-homelab='docker run --rm -v ${HOME}/.ssh/id_rsa:/home/ansible/.ssh/id_rsa -v ${PWD}:/work -w /work -it code.home.jbeard.dev:5050/homelab/platform/homelab-base/ansible-tool:latest bash'
    fi
  ;;
  Linux)
    alias ls="ls --color=always -hFG"
    export MAIL=/home/josh/Mail/INBOX
    export MAILCHECK=60

    # vs code (prefer vscodium)
    if !which code >>/dev/null 2>&1 && which vscodium >>/dev/null 2>&1; then
      alias code='vscodium'
    fi

    # Manual docker toggle (used on my netbook)
    if which docker >>/dev/null 2>&1; then
      alias docker-start='sudo systemctl start docker'
      alias docker-stop='sudo systemctl stop docker'
    fi

    # Terminal spotify (used on my netbook)
    if ! which spotify >>/dev/null 2>&1 && which spt >>/dev/null 2>&1; then
      alias spotify='systemctl --user start spotifyd.service && spt'
      alias spotify-stop='systemctl --user stop spotifyd.service'
    fi

    # Use 'spotify-tray' in place of the regular Spotify app.
    # See https://github.com/macdems/yet-another-spotify-tray
    #if which spotify-tray >>/dev/null 2>&1; then
    #  alias spotify='spotify-tray'
    #fi
  ;;
  NetBSD|OpenBSD)
    alias ls="ls -hF"
  ;;
esac

# SSH and GPG keys and keychains
# Good information about SSH/GPG keys at https://wiki.archlinux.org/title/SSH_keys
#
# - Prefer gnome-keyring-daemon. It's presumed this has been enabled and started
#   via the systemd user unit:
#   - systemctl edit --user --full gnome-keyring-daemon.service
#     * Add 'ssh' to components list
#   - systemctl enable --user gnome-keyring-daemon.service
# - Otherwise, use 'keychain' if it exists on Linux and *BSD
# - Otherwise, use regular ssh-agent running via systemd service, if available
# - Refer to https://stackoverflow.com/a/18915067 for a good solution if a
#   keychain tool or the ssh-agent service isn't running.
case $(uname -s) in
  Linux|*BSD)
    # Try to use gnome-keyring-daemon that was started via the systemd user
    # service
    if systemctl status --user gnome-keyring-daemon 2>&1 >/dev/null; then
      eval $(/usr/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh 2>/dev/null)
      export GNOME_KEYRING_CONTROL
      export SSH_AUTH_SOCK
    # Fallback to the 'keychain' tool, if available
    elif which keychain 2>&1 >/dev/null; then
      eval $(keychain --quick --systemd --dir ~/.keychain --eval --gpg2 --agents ssh,gpg id_rsa CA96989D4A3F7869F5DEB38DF9BE548EC3641B41)
    # systemd ssh-agent user service
    elif systemctl status --user ssh-agent 2>&1 >/dev/null; then
      export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"
    fi

    if which firefox 2>&1 >/dev/null; then
      export BROWSER=`which firefox`
    elif which chromium 2>&1 >/dev/null; then
      export BROWSER=`which chromium`
    fi
  ;;
esac

if [ -f "$HOME/.opsession" ]; then
  source $HOME/.opsession
fi

### Helper Functions

mvr() {
  oldpwd=$PWD
  cd "$1"
  find . -type d -exec mkdir -p "$2"/{} \;
  find . -type f -exec mv {} "$2"/{} \;
  cd "$oldpwd"
}

ssh_key_del() {
  if [ "$1" != "" ]; then
    sed -n "${1}p" ~/.ssh/known_hosts
    sed -i '' "${1}d" ~/.ssh/known_hosts
    echo "Removed line ${1} from ~/.ssh/known_hosts"
  else
    echo "Usage: $0 <line number>"
  fi
}

# Easily delete removed files from git index
# From: https://github.com/ariejan/
grm() {
  git status | grep "deleted:" | awk '{print $3}' | xargs git rm --ignore-unmatch
}
